GET         /                                 controllers.FrontendController.index

GET         /api/graphql                      modules.graphql.controllers.GraphQLController.graphql(query: String, variables: Option[String], operation: Option[String])

POST        /api/graphql                      modules.graphql.controllers.GraphQLController.graphqlPost

GET         /api/graphql/render-schema        modules.graphql.controllers.GraphQLController.renderSchema

GET         /api/fb                           modules.facebook.controllers.FbController.test

POST        /api/sparql                       modules.sparql.controllers.SPARQLController.execute(projectId: String)

GET         /api/queries/                     modules.sparql.controllers.QueryController.findAll(projectId: String)

POST        /api/queries/                     modules.sparql.controllers.QueryController.create()

PUT         /api/queries/                     modules.sparql.controllers.QueryController.update()

GET         /api/crawled-pages/               modules.webcrawler.controllers.WebPageController.findAll(projectId: String)

POST        /api/tasks/                       modules.task.controllers.TaskController.create

PUT         /api/tasks/                       modules.task.controllers.TaskController.update

GET         /api/tasks/                       modules.task.controllers.TaskController.findAll

POST        /api/projects/                    modules.project.controllers.ProjectController.create

GET         /api/projects/                    modules.project.controllers.ProjectController.findAll

POST        /api/files/                       modules.fileserver.controllers.FileController.upload

GET         /api/files/                       modules.fileserver.controllers.FileController.findAll(projectId: String)

POST        /api/rml/map-file/                modules.rml.controllers.RMLController.execute

GET         /api/entity-hub/test1             modules.entityhub.controllers.EntityHubController.test(dataFileId: String, mappingFileId: String, projectId: String, graph: String)

GET         /*file                            controllers.FrontendController.assetOrDefault(file)
